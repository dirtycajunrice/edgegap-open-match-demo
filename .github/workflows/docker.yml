name: ci

on:
  workflow_dispatch:
    inputs:
      function:
        description: Service
        required: true
        default: frontend
        type: choice
        options: [ director, front-end, match-function ]
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  generator:
    name: Generate job matrices
    runs-on: ubuntu-latest
    outputs:
      functions: ${{ steps.generate.outputs.functions }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Generate change matrix
        id: generate
        run: |
          if [[ -n "${{ github.event.inputs.function }}" ]]; then
            echo 'functions=["${{ github.event.inputs.function }}"]' >> "$GITHUB_OUTPUT"
          else
            LIST="$(git -p show --name-only | grep '^edgegap' | sed 's/^go\/\(.*\)\/.*/\1/' | sort | uniq | jq -R . | jq -cs .)"
            echo "functions=${LIST}" >> "$GITHUB_OUTPUT"
          fi
  docker:
    needs: [ generator ]
    strategy:
      matrix:
        function: ${{ fromJSON(needs.generator.outputs.functions) }}

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.function }}
          labels: |
            org.opencontainers.image.title=${{ matrix.function }}
            org.opencontainers.image.description=Microservice ${{ matrix.function }} for OpenMatch Advanced Matchmaker
            org.opencontainers.image.vendor=Edgegap
          annotations: |
            org.opencontainers.image.title=${{ matrix.function }}
            org.opencontainers.image.description=Microservice ${{ matrix.function }} for OpenMatch Advanced Matchmaker
            org.opencontainers.image.vendor=Edgegap        

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: FUNCTION_NAME=${{ matrix.function }}
          platforms: linux/amd64 #,linux/arm64 # arm64 takes approximately 5 minutes to build and is commented out by default
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
