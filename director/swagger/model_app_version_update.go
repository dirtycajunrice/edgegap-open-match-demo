/*
 * Codema
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.41.174.post.dev2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type AppVersionUpdate struct {
	// The Version Name
	Name string `json:"name,omitempty"`
	// If the Version is active currently in the system
	IsActive bool `json:"is_active,omitempty"`
	// The Repository where the image is (i.e. 'harbor.edgegap.com' or 'docker.io')
	DockerRepository string `json:"docker_repository,omitempty"`
	// The name of your image (i.e. 'edgegap/demo')
	DockerImage string `json:"docker_image,omitempty"`
	// The tag of your image (i.e. '0.1.2')
	DockerTag string `json:"docker_tag,omitempty"`
	// The username to access the docker repository
	PrivateUsername string `json:"private_username,omitempty"`
	// The Private Password or Token of the username (We recommend to use a token)
	PrivateToken string `json:"private_token,omitempty"`
	// Units of vCPU needed (1024= 1vcpu)
	ReqCpu int32 `json:"req_cpu,omitempty"`
	// Units of memory in MB needed (1024 = 1GB)
	ReqMemory int32 `json:"req_memory,omitempty"`
	// Units of GPU needed (1024= 1 GPU)
	ReqVideo int32 `json:"req_video,omitempty"`
	// The Max duration of the game
	MaxDuration int32 `json:"max_duration,omitempty"`
	// Allow to inject ASA Variables
	UseTelemetry bool `json:"use_telemetry,omitempty"`
	// Allow to inject Context Variables
	InjectContextEnv bool `json:"inject_context_env,omitempty"`
	// ACL Protection is active
	WhitelistingActive bool `json:"whitelisting_active,omitempty"`
	// Allow faster deployment by caching your container image in every Edge site
	ForceCache bool `json:"force_cache,omitempty"`
	// Start of the preferred interval for caching your container
	CacheMinHour int32 `json:"cache_min_hour,omitempty"`
	// End of the preferred interval for caching your container
	CacheMaxHour int32 `json:"cache_max_hour,omitempty"`
	// Estimated maximum time in seconds to deploy, after this time we will consider it not working and retry.
	TimeToDeploy int32 `json:"time_to_deploy,omitempty"`
	// Parameters defining the behavior of a session-based app version. If set, the app is considered to be session-based.
	SessionConfig *AppVersionUpdateSessionConfig `json:"session_config,omitempty"`
	Ports         []AppVersionPort               `json:"ports,omitempty"`
	Probe         *AppVersionProbe               `json:"probe,omitempty"`
	Envs          []AppVersionEnv                `json:"envs,omitempty"`
}
